name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - feature/main
      - feature/prod
  pull_request:
    branches:
      - develop
      - feature/main
      - feature/prod

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # checkout do c√≥digo-fonte
      - name: Checkout code
        uses: actions/checkout@v2

      # .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # restaurar pacotes NuGet para o projeto principal e testes
      - name: Restore dependencies
        run: |
          dotnet restore Fiap.API.ReportCity/Fiap.API.ReportCity.csproj
          dotnet restore Fiap.API.ReportCity.Test/Fiap.API.ReportCity.Test.csproj

      # compilar o projeto principal e testes
      - name: Build project
        run: |
          dotnet build Fiap.API.ReportCity/Fiap.API.ReportCity.csproj --configuration Release
          dotnet build Fiap.API.ReportCity.Test/Fiap.API.ReportCity.Test.csproj --configuration Release
      # construir e publicar Docker

      - name: Run tests
        run: dotnet test Fiap.API.ReportCity.Test/Fiap.API.ReportCity.Test.csproj --no-build --verbosity normal
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     file: ./Fiap.API.ReportCity/Dockerfile
      #     push: true
      #     tags: emeryguilherme/fiapapireportcity:dev


  build-and-push-docker:
      runs-on: ubuntu-latest
      needs: build-and-test

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and push Docker image
          uses: docker/build-push-action@v4
          with:
            context: .
            file: Fiap.API.ReportCity/Dockerfile
            push: true
            tags: emeryguilherme/fiapapireportcity:dev

  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    needs: build-and-push-docker

    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy to (Staging)
        run: echo "test"

      - name: Deploy to (Production)
        if: github.ref == 'refs/heads/feature/prod'
        run: echo "test"